{"remainingRequest":"/Users/li/Desktop/foodish/node_modules/babel-loader/lib/index.js!/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/li/Desktop/foodish/src/views/personHome/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/li/Desktop/foodish/src/views/personHome/index.vue","mtime":1550588444000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/li/Desktop/foodish/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/li/Desktop/foodish/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/li/Desktop/foodish/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FoodItemSmall from \"@/components/FoodItemSmall\";\nexport default {\n  components: {\n    FoodItemSmall: FoodItemSmall\n  },\n  data: function data() {\n    return {\n      active: 0,\n      commitId: \"\",\n      isCommit: false,\n      image_url: \"\",\n      last_name: \"\",\n      score: 0,\n      modal: {\n        id: \"\",\n        name: \"\",\n        date: \"\",\n        image_url: \"\",\n        score: 0,\n        content: \"\"\n      },\n      forms: {},\n      is_follow: false,\n      rules: {},\n      user: {},\n      flavorList: [],\n      dislikeList: [],\n      bookList: [],\n      commitList: [],\n      foodList: [] //我做的菜列表\n\n    };\n  },\n  computed: {\n    fans_num: function fans_num() {\n      return this.user.fans_num;\n    },\n    uname: function uname() {\n      return this.user.name;\n    },\n    username: function username() {\n      return this.user.username;\n    },\n    commingList: function commingList() {\n      var d = +new Date();\n      var dayTime = 24 * 60 * 60 * 1000;\n      return this.bookList.map(function (item) {\n        var food_detail = item.food_detail;\n\n        if (food_detail) {\n          if (d - food_detail.date <= dayTime && !food_detail.is_cancel) {\n            return _objectSpread({}, item, food_detail, {\n              orderStatus: 0,\n              orderText: \"You need to take it\"\n            });\n          }\n\n          if (food_detail.is_cancel) {\n            return _objectSpread({}, item, food_detail, {\n              orderStatus: 1,\n              orderText: \"It has been canceled\"\n            });\n          } //\n\n        }\n      }).filter(function (item) {\n        return +new Date() >= item.date && item.is_cancel;\n      });\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.flavorList = this.$utils.flavor;\n              this.dislikeList = this.$utils.dislike;\n              _context.next = 4;\n              return this.getUserInfo();\n\n            case 4:\n              this.getBookInfo();\n              this.getFoodList();\n              this.getCommitList();\n              this.isFollow();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    currStyle: function currStyle(img) {\n      return \"background-image:url(\".concat(img, \");width:150px;height:100px;\");\n    },\n    getCurrStyle: function getCurrStyle() {\n      return \"background-image:url(\".concat(this.image_url, \");background-size: cover;width:100%;height:200px;background-color:#eee;background-size: cover;\");\n    },\n    isFollow: function () {\n      var _isFollow = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http({\n                  url: this.API.CHECK_FOLLOW,\n                  method: \"post\",\n                  data: {\n                    fans: this.$store.state.users.id,\n                    star: this.user.id\n                  }\n                });\n\n              case 2:\n                _ref = _context2.sent;\n                data = _ref.data;\n                this.is_follow = data.is_follow;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function isFollow() {\n        return _isFollow.apply(this, arguments);\n      }\n\n      return isFollow;\n    }(),\n    onFollow: function () {\n      var _onFollow = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(type) {\n        var _ref2, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$http({\n                  url: this.API.FOLLOW,\n                  method: \"post\",\n                  data: {\n                    fans: this.$store.state.users.id,\n                    star: this.user.id,\n                    handle: type ? \"remove\" : \"follow\"\n                  }\n                });\n\n              case 2:\n                _ref2 = _context3.sent;\n                data = _ref2.data;\n                this.$Message.success((type ? \"remove\" : \"follow\") + \"  successful\");\n                _context3.next = 7;\n                return this.getUserInfo();\n\n              case 7:\n                this.isFollow();\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onFollow(_x) {\n        return _onFollow.apply(this, arguments);\n      }\n\n      return onFollow;\n    }(),\n    getCommitList: function () {\n      var _getCommitList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var _ref3, data, score;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$http({\n                  url: this.API.COMMIT_ADD,\n                  params: {\n                    auther: this.$route.query.userId\n                  }\n                });\n\n              case 2:\n                _ref3 = _context4.sent;\n                data = _ref3.data;\n                score = 0;\n                data.map(function (item) {\n                  score += item.score;\n                });\n                this.score = score / data.length;\n                this.commitList = data;\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getCommitList() {\n        return _getCommitList.apply(this, arguments);\n      }\n\n      return getCommitList;\n    }(),\n    getUserInfo: function () {\n      var _getUserInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var _ref4, data;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$http({\n                  url: this.API.UPDATE_USER(this.$route.query.userId),\n                  method: \"get\"\n                });\n\n              case 2:\n                _ref4 = _context5.sent;\n                data = _ref4.data;\n                this.user = data;\n                this.image_url = data.image_url;\n                this.last_name = data.last_name;\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }(),\n    onFileSuccess: function () {\n      var _onFileSuccess = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(res) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$http({\n                  url: this.API.UPDATE_USER(this.$route.query.userId),\n                  method: \"PATCH\",\n                  data: {\n                    image_url: res.url\n                  }\n                });\n\n              case 2:\n                this.getUserInfo();\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function onFileSuccess(_x2) {\n        return _onFileSuccess.apply(this, arguments);\n      }\n\n      return onFileSuccess;\n    }(),\n    getFoodList: function () {\n      var _getFoodList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var _ref5, data;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$http({\n                  url: this.API.FOOD_LIST,\n                  params: {\n                    auther: this.$route.query.userId\n                  }\n                });\n\n              case 2:\n                _ref5 = _context7.sent;\n                data = _ref5.data;\n                this.foodList = data.sort(function (a, b) {\n                  if (a.date > b.date) {\n                    return -1;\n                  } else {\n                    return 1;\n                  }\n                });\n                this.foodList = this.foodList.filter(function (item) {\n                  return +new Date() >= item.date;\n                });\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getFoodList() {\n        return _getFoodList.apply(this, arguments);\n      }\n\n      return getFoodList;\n    }(),\n    getBookInfo: function () {\n      var _getBookInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var _ref6, data;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$http({\n                  url: this.API.BOOK_LIST_Q(this.$route.query.userId)\n                });\n\n              case 2:\n                _ref6 = _context8.sent;\n                data = _ref6.data;\n                this.bookList = data.map(function (item) {\n                  if (item.food_detail) {\n                    item.food_detail = JSON.parse(item.food_detail);\n                  }\n\n                  return item;\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getBookInfo() {\n        return _getBookInfo.apply(this, arguments);\n      }\n\n      return getBookInfo;\n    }(),\n    onClickMenu: function onClickMenu(active) {\n      this.active = active;\n    },\n    logout: function logout() {\n      this.$store.commit(\"users\", {});\n      this.$router.replace({\n        name: \"Login\"\n      });\n    },\n    onEvaluate: function onEvaluate(item) {\n      this.isCommit = true;\n      this.modal = _Object$assign(this.modal, {\n        image_url: item.image_url,\n        name: item.name,\n        date: item.date,\n        score: 0,\n        content: \"\",\n        id: item.id\n      });\n    },\n    onCommitAdd: function () {\n      var _onCommitAdd = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.$http({\n                  url: this.API.COMMIT_ADD,\n                  method: \"post\",\n                  data: {\n                    description: this.modal.content,\n                    score: this.modal.score,\n                    auther: this.$route.query.userId,\n                    food: this.modal.id\n                  }\n                });\n\n              case 2:\n                this.isCommit = false; //刷新列表\n\n                this.getBookInfo();\n                this.$Message.success(\"Evaluation success!\");\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function onCommitAdd() {\n        return _onCommitAdd.apply(this, arguments);\n      }\n\n      return onCommitAdd;\n    }()\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"person\">\r\n    <div class=\"person-header\">\r\n      <div class=\"person-left\" @click=\"$router.push({ name: 'Home' })\">\r\n        <img src=\"@/resource/fanhui.svg\" alt=\"\" />\r\n      </div>\r\n      <span>Foodish</span>\r\n    </div>\r\n    <div class=\"person-main-form\">\r\n      <div class=\"person-main-right\" style=\"padding:40px;width:100%\">\r\n        <!-- user -->\r\n        <div class=\"person-main-row\">\r\n          <div class=\"person-logo\">\r\n            <div :style=\"getCurrStyle()\" class=\"person-image\"></div>\r\n          </div>\r\n          <div class=\"person-info\">\r\n            <Rate :value=\"score\" disabled />\r\n            <p style=\"font-size:20px\">{{ uname }}</p>\r\n            <p style=\"font-size:20px\">{{ username }}</p>\r\n            <p style=\"font-size:20px\">fans:{{fans_num}}</p>\r\n            <p style=\"font-size:14px\">{{last_name}}</p>\r\n            <p>\r\n              <Button type=\"warning\" size=\"small\" @click=\"onFollow(is_follow)\">{{is_follow?'cancel follow':'follow'}}</Button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div style=\"padding-top:0\">\r\n          <div class=\"not-data\" v-if=\"foodList.length === 0\">\r\n            <img src=\"../../resource/745077899322453353.jpg\" />\r\n            <p>It is empty. Add something to it now!</p>\r\n          </div>\r\n          <FoodItemSmall :align=\"`${index % 2 !== 0 ? 'right' : 'left'}`\" v-for=\"(item, index) in foodList\" :key=\"item.id\" :item=\"item\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 评论 -->\r\n    <Modal :value=\"isCommit\" @on-cancel=\"isCommit = false\" title=\"evaluate\" :styles=\"{ width: '500px' }\">\r\n      <div class=\"modal-wrap\">\r\n        <div class=\"modal-inner\">\r\n          <div class=\"image\" :style=\"currStyle(modal.image_url)\"></div>\r\n          <div class=\"right\">\r\n            <p>{{ modal.name }}</p>\r\n            <p>{{ modal.date | dateFormat(\"yyyy-MM-dd hh:mm\") }}</p>\r\n          </div>\r\n        </div>\r\n        <Rate v-model=\"modal.score\" />\r\n        <Input type=\"textarea\" v-model=\"modal.content\" :rows=\"4\" placeholder=\"commit\"></Input>\r\n      </div>\r\n      <div slot=\"footer\" class=\"modal-footer\">\r\n        <Button @click=\"isCommit = false\">cancel</Button>\r\n        <Button @click=\"onCommitAdd\" type=\"warning\">ok</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FoodItemSmall from \"@/components/FoodItemSmall\";\r\nexport default {\r\n  components: { FoodItemSmall },\r\n  data() {\r\n    return {\r\n      active: 0,\r\n      commitId: \"\",\r\n      isCommit: false,\r\n      image_url: \"\",\r\n      last_name:\"\",\r\n      score: 0,\r\n      modal: {\r\n        id: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        image_url: \"\",\r\n        score: 0,\r\n        content: \"\"\r\n      },\r\n      forms: {},\r\n      is_follow: false,\r\n      rules: {},\r\n      user: {},\r\n      flavorList: [],\r\n      dislikeList: [],\r\n      bookList: [],\r\n      commitList: [],\r\n      foodList: [] //我做的菜列表\r\n    };\r\n  },\r\n  computed: {\r\n    fans_num() {\r\n      return this.user.fans_num;\r\n    },\r\n    uname(){\r\n      return this.user.name;\r\n    },\r\n    username() {\r\n      return this.user.username;\r\n    },\r\n    commingList() {\r\n      const d = +new Date();\r\n      const dayTime = 24 * 60 * 60 * 1000;\r\n      return this.bookList\r\n        .map(item => {\r\n          const food_detail = item.food_detail;\r\n          if (food_detail) {\r\n            if (d - food_detail.date <= dayTime && !food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 0,\r\n                orderText: \"You need to take it\"\r\n              };\r\n            }\r\n\r\n            if (food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 1,\r\n                orderText: \"It has been canceled\"\r\n              };\r\n            }\r\n\r\n            //\r\n          }\r\n        })\r\n        .filter(item => {\r\n          return +new Date() >= item.date && item.is_cancel;\r\n        });\r\n    }\r\n  },\r\n  async created() {\r\n    this.flavorList = this.$utils.flavor;\r\n    this.dislikeList = this.$utils.dislike;\r\n    await this.getUserInfo();\r\n    this.getBookInfo();\r\n    this.getFoodList();\r\n    this.getCommitList();\r\n    this.isFollow();\r\n  },\r\n  methods: {\r\n    currStyle(img) {\r\n      return `background-image:url(${img});width:150px;height:100px;`;\r\n    },\r\n    getCurrStyle() {\r\n      return `background-image:url(${\r\n        this.image_url\r\n      });background-size: cover;width:100%;height:200px;background-color:#eee;background-size: cover;`;\r\n    },\r\n    async isFollow() {\r\n      const { data } = await this.$http({\r\n        url: this.API.CHECK_FOLLOW,\r\n        method: \"post\",\r\n        data: {\r\n          fans: this.$store.state.users.id,\r\n          star: this.user.id\r\n        }\r\n      });\r\n      this.is_follow = data.is_follow;\r\n    },\r\n    async onFollow(type) {\r\n      const { data } = await this.$http({\r\n        url: this.API.FOLLOW,\r\n        method: \"post\",\r\n        data: {\r\n          fans: this.$store.state.users.id,\r\n          star: this.user.id,\r\n          handle: type ? \"remove\" : \"follow\"\r\n        }\r\n      });\r\n      this.$Message.success((type ? \"remove\" : \"follow\") + \"  successful\");\r\n      await this.getUserInfo();\r\n      this.isFollow();\r\n    },\r\n    async getCommitList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        params: {\r\n          auther: this.$route.query.userId\r\n        }\r\n      });\r\n      let score = 0;\r\n      data.map(item => {\r\n        score += item.score;\r\n      });\r\n      this.score = score / data.length;\r\n      this.commitList = data;\r\n    },\r\n    async getUserInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.UPDATE_USER(this.$route.query.userId),\r\n        method: \"get\"\r\n      });\r\n      this.user = data;\r\n      this.image_url = data.image_url;\r\n      this.last_name = data.last_name\r\n    },\r\n    async onFileSuccess(res) {\r\n      await this.$http({\r\n        url: this.API.UPDATE_USER(this.$route.query.userId),\r\n        method: \"PATCH\",\r\n        data: {\r\n          image_url: res.url\r\n        }\r\n      });\r\n      this.getUserInfo();\r\n    },\r\n    async getFoodList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.FOOD_LIST,\r\n        params: {\r\n          auther: this.$route.query.userId\r\n        }\r\n      });\r\n      this.foodList = data.sort((a, b) => {\r\n        if (a.date > b.date) {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      });\r\n      this.foodList = this.foodList.filter(item => {\r\n        return +new Date() >= item.date;\r\n      });\r\n    },\r\n    async getBookInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.BOOK_LIST_Q(this.$route.query.userId)\r\n      });\r\n      this.bookList = data.map(item => {\r\n        if (item.food_detail) {\r\n          item.food_detail = JSON.parse(item.food_detail);\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    onClickMenu(active) {\r\n      this.active = active;\r\n    },\r\n    logout() {\r\n      this.$store.commit(\"users\", {});\r\n      this.$router.replace({ name: \"Login\" });\r\n    },\r\n    onEvaluate(item) {\r\n      this.isCommit = true;\r\n      this.modal = Object.assign(this.modal, {\r\n        image_url: item.image_url,\r\n        name: item.name,\r\n        date: item.date,\r\n        score: 0,\r\n        content: \"\",\r\n        id: item.id\r\n      });\r\n    },\r\n    async onCommitAdd() {\r\n      await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        method: \"post\",\r\n        data: {\r\n          description: this.modal.content,\r\n          score: this.modal.score,\r\n          auther: this.$route.query.userId,\r\n          food: this.modal.id\r\n        }\r\n      });\r\n      this.isCommit = false;\r\n      //刷新列表\r\n      this.getBookInfo();\r\n      this.$Message.success(\"Evaluation success!\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"./style.less\";\r\n</style>\r\n"],"sourceRoot":"src/views/personHome"}]}