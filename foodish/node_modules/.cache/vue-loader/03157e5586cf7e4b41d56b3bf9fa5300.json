{"remainingRequest":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/li/Desktop/foodish/src/views/post/index.vue?vue&type=template&id=4fd2eabd&","dependencies":[{"path":"/Users/li/Desktop/foodish/src/views/post/index.vue","mtime":1548770518000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"post\" }, [\n    _c(\"div\", { staticClass: \"post-header\" }, [\n      _c(\n        \"div\",\n        {\n          staticClass: \"post-left\",\n          on: {\n            click: function($event) {\n              _vm.$router.push({ name: \"Home\" })\n            }\n          }\n        },\n        [\n          _c(\"img\", {\n            attrs: { src: require(\"@/resource/fanhui.svg\"), alt: \"\" }\n          })\n        ]\n      ),\n      _c(\"span\", [_vm._v(\"Foodish\")])\n    ]),\n    _c(\n      \"div\",\n      { staticClass: \"post-main\" },\n      [\n        _c(\n          \"Form\",\n          {\n            ref: \"form\",\n            staticClass: \"post-main-form\",\n            attrs: { \"label-width\": 100, model: _vm.forms, rules: _vm.rules }\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"post-main-left\" },\n              [\n                _c(\n                  \"FormItem\",\n                  { attrs: { prop: \"image_url\", \"label-width\": 0 } },\n                  [\n                    _c(\n                      \"Upload\",\n                      {\n                        attrs: {\n                          \"on-success\": _vm.onFileSuccess,\n                          name: \"img\",\n                          \"show-upload-list\": false,\n                          multiple: \"\",\n                          type: \"drag\",\n                          action: _vm.API.IMAGE_UPLOAD\n                        }\n                      },\n                      [\n                        !_vm.forms.image_url\n                          ? _c(\n                              \"div\",\n                              { staticStyle: { padding: \"120px 0\" } },\n                              [\n                                _c(\"Icon\", {\n                                  staticStyle: { color: \"#3399ff\" },\n                                  attrs: {\n                                    type: \"ios-cloud-upload\",\n                                    size: \"52\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          : _c(\"div\", {\n                              style:\n                                \"background:url(\" +\n                                _vm.forms.image_url +\n                                \") no-repeat top center;\\n              background-size: cover;width:100%;height:300px\"\n                            })\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"post-main-right\" },\n              [\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Food name\", prop: \"name\" } },\n                  [\n                    _c(\"Input\", {\n                      staticStyle: { width: \"450px\" },\n                      attrs: { type: \"text\", placeholder: \"\" },\n                      model: {\n                        value: _vm.forms.name,\n                        callback: function($$v) {\n                          _vm.$set(_vm.forms, \"name\", $$v)\n                        },\n                        expression: \"forms.name\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Price\", prop: \"price\" } },\n                  [\n                    _c(\"InputNumber\", {\n                      staticStyle: { width: \"450px\" },\n                      attrs: { max: 10000, min: 1 },\n                      model: {\n                        value: _vm.forms.price,\n                        callback: function($$v) {\n                          _vm.$set(_vm.forms, \"price\", $$v)\n                        },\n                        expression: \"forms.price\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Date\", prop: \"date\" } },\n                  [\n                    _c(\"DatePicker\", {\n                      staticStyle: { width: \"450px\" },\n                      attrs: { options: _vm.options, type: \"datetime\" },\n                      model: {\n                        value: _vm.forms.date,\n                        callback: function($$v) {\n                          _vm.$set(_vm.forms, \"date\", $$v)\n                        },\n                        expression: \"forms.date\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Place\", prop: \"place\" } },\n                  [\n                    _c(\"Input\", {\n                      staticStyle: { width: \"450px\" },\n                      attrs: { type: \"text\" },\n                      model: {\n                        value: _vm.forms.place,\n                        callback: function($$v) {\n                          _vm.$set(_vm.forms, \"place\", $$v)\n                        },\n                        expression: \"forms.place\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"People\", prop: \"max_book\" } },\n                  [\n                    _c(\"InputNumber\", {\n                      staticStyle: { width: \"450px\" },\n                      attrs: { max: 10000, min: 1 },\n                      model: {\n                        value: _vm.forms.max_book,\n                        callback: function($$v) {\n                          _vm.$set(_vm.forms, \"max_book\", $$v)\n                        },\n                        expression: \"forms.max_book\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"post-main-desc\" },\n              [\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Desc\", prop: \"content\" } },\n                  [\n                    _c(\"Input\", {\n                      attrs: { type: \"textarea\", rows: 4 },\n                      model: {\n                        value: _vm.forms.content,\n                        callback: function($$v) {\n                          _vm.$set(_vm.forms, \"content\", $$v)\n                        },\n                        expression: \"forms.content\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Flavor\", prop: \"flavor\" } },\n                  _vm._l(_vm.flavorList, function(item) {\n                    return _c(\n                      \"Tag\",\n                      {\n                        key: item.val,\n                        attrs: {\n                          color: _vm.getIsActive(\n                            \"flavor\",\n                            item.val,\n                            _vm.flavorList\n                          )\n                        },\n                        nativeOn: {\n                          click: function($event) {\n                            _vm.onTagSelect(\"flavor\", item.val)\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(item.text))]\n                    )\n                  }),\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  { attrs: { label: \"Pay attention\", prop: \"dislike\" } },\n                  _vm._l(_vm.dislikeList, function(item) {\n                    return _c(\n                      \"Tag\",\n                      {\n                        key: item.val,\n                        attrs: {\n                          color: _vm.getIsActive(\n                            \"dislike\",\n                            item.val,\n                            _vm.dislikeList\n                          )\n                        },\n                        nativeOn: {\n                          click: function($event) {\n                            _vm.onTagSelect(\"dislike\", item.val)\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(item.text))]\n                    )\n                  }),\n                  1\n                ),\n                _c(\n                  \"FormItem\",\n                  [\n                    _c(\n                      \"Button\",\n                      {\n                        attrs: { long: \"\", size: \"large\", type: \"warning\" },\n                        on: { click: _vm.submit }\n                      },\n                      [_vm._v(\"Submit\")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]\n        )\n      ],\n      1\n    ),\n    _vm.isShow\n      ? _c(\"div\", { staticClass: \"text-modal\" }, [\n          _c(\"span\", { staticStyle: { color: \"#f95\", \"font-size\": \"100px\" } }, [\n            _vm._v(\"Weell Done!\")\n          ])\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}