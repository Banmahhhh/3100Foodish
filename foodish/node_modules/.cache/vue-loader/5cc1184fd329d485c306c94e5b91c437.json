{"remainingRequest":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/li/Desktop/foodish/src/views/personHome/index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/li/Desktop/foodish/src/views/personHome/index.vue","mtime":1550588444000},{"path":"/Users/li/Desktop/foodish/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/less-loader/dist/cjs.js","mtime":1553691367000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"./style.less\";\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkRA","file":"index.vue","sourceRoot":"src/views/personHome","sourcesContent":["<template>\r\n  <div class=\"person\">\r\n    <div class=\"person-header\">\r\n      <div class=\"person-left\" @click=\"$router.push({ name: 'Home' })\">\r\n        <img src=\"@/resource/fanhui.svg\" alt=\"\" />\r\n      </div>\r\n      <span>Foodish</span>\r\n    </div>\r\n    <div class=\"person-main-form\">\r\n      <div class=\"person-main-right\" style=\"padding:40px;width:100%\">\r\n        <!-- user -->\r\n        <div class=\"person-main-row\">\r\n          <div class=\"person-logo\">\r\n            <div :style=\"getCurrStyle()\" class=\"person-image\"></div>\r\n          </div>\r\n          <div class=\"person-info\">\r\n            <Rate :value=\"score\" disabled />\r\n            <p style=\"font-size:20px\">{{ uname }}</p>\r\n            <p style=\"font-size:20px\">{{ username }}</p>\r\n            <p style=\"font-size:20px\">fans:{{fans_num}}</p>\r\n            <p style=\"font-size:14px\">{{last_name}}</p>\r\n            <p>\r\n              <Button type=\"warning\" size=\"small\" @click=\"onFollow(is_follow)\">{{is_follow?'cancel follow':'follow'}}</Button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div style=\"padding-top:0\">\r\n          <div class=\"not-data\" v-if=\"foodList.length === 0\">\r\n            <img src=\"../../resource/745077899322453353.jpg\" />\r\n            <p>It is empty. Add something to it now!</p>\r\n          </div>\r\n          <FoodItemSmall :align=\"`${index % 2 !== 0 ? 'right' : 'left'}`\" v-for=\"(item, index) in foodList\" :key=\"item.id\" :item=\"item\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 评论 -->\r\n    <Modal :value=\"isCommit\" @on-cancel=\"isCommit = false\" title=\"evaluate\" :styles=\"{ width: '500px' }\">\r\n      <div class=\"modal-wrap\">\r\n        <div class=\"modal-inner\">\r\n          <div class=\"image\" :style=\"currStyle(modal.image_url)\"></div>\r\n          <div class=\"right\">\r\n            <p>{{ modal.name }}</p>\r\n            <p>{{ modal.date | dateFormat(\"yyyy-MM-dd hh:mm\") }}</p>\r\n          </div>\r\n        </div>\r\n        <Rate v-model=\"modal.score\" />\r\n        <Input type=\"textarea\" v-model=\"modal.content\" :rows=\"4\" placeholder=\"commit\"></Input>\r\n      </div>\r\n      <div slot=\"footer\" class=\"modal-footer\">\r\n        <Button @click=\"isCommit = false\">cancel</Button>\r\n        <Button @click=\"onCommitAdd\" type=\"warning\">ok</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FoodItemSmall from \"@/components/FoodItemSmall\";\r\nexport default {\r\n  components: { FoodItemSmall },\r\n  data() {\r\n    return {\r\n      active: 0,\r\n      commitId: \"\",\r\n      isCommit: false,\r\n      image_url: \"\",\r\n      last_name:\"\",\r\n      score: 0,\r\n      modal: {\r\n        id: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        image_url: \"\",\r\n        score: 0,\r\n        content: \"\"\r\n      },\r\n      forms: {},\r\n      is_follow: false,\r\n      rules: {},\r\n      user: {},\r\n      flavorList: [],\r\n      dislikeList: [],\r\n      bookList: [],\r\n      commitList: [],\r\n      foodList: [] //我做的菜列表\r\n    };\r\n  },\r\n  computed: {\r\n    fans_num() {\r\n      return this.user.fans_num;\r\n    },\r\n    uname(){\r\n      return this.user.name;\r\n    },\r\n    username() {\r\n      return this.user.username;\r\n    },\r\n    commingList() {\r\n      const d = +new Date();\r\n      const dayTime = 24 * 60 * 60 * 1000;\r\n      return this.bookList\r\n        .map(item => {\r\n          const food_detail = item.food_detail;\r\n          if (food_detail) {\r\n            if (d - food_detail.date <= dayTime && !food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 0,\r\n                orderText: \"You need to take it\"\r\n              };\r\n            }\r\n\r\n            if (food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 1,\r\n                orderText: \"It has been canceled\"\r\n              };\r\n            }\r\n\r\n            //\r\n          }\r\n        })\r\n        .filter(item => {\r\n          return +new Date() >= item.date && item.is_cancel;\r\n        });\r\n    }\r\n  },\r\n  async created() {\r\n    this.flavorList = this.$utils.flavor;\r\n    this.dislikeList = this.$utils.dislike;\r\n    await this.getUserInfo();\r\n    this.getBookInfo();\r\n    this.getFoodList();\r\n    this.getCommitList();\r\n    this.isFollow();\r\n  },\r\n  methods: {\r\n    currStyle(img) {\r\n      return `background-image:url(${img});width:150px;height:100px;`;\r\n    },\r\n    getCurrStyle() {\r\n      return `background-image:url(${\r\n        this.image_url\r\n      });background-size: cover;width:100%;height:200px;background-color:#eee;background-size: cover;`;\r\n    },\r\n    async isFollow() {\r\n      const { data } = await this.$http({\r\n        url: this.API.CHECK_FOLLOW,\r\n        method: \"post\",\r\n        data: {\r\n          fans: this.$store.state.users.id,\r\n          star: this.user.id\r\n        }\r\n      });\r\n      this.is_follow = data.is_follow;\r\n    },\r\n    async onFollow(type) {\r\n      const { data } = await this.$http({\r\n        url: this.API.FOLLOW,\r\n        method: \"post\",\r\n        data: {\r\n          fans: this.$store.state.users.id,\r\n          star: this.user.id,\r\n          handle: type ? \"remove\" : \"follow\"\r\n        }\r\n      });\r\n      this.$Message.success((type ? \"remove\" : \"follow\") + \"  successful\");\r\n      await this.getUserInfo();\r\n      this.isFollow();\r\n    },\r\n    async getCommitList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        params: {\r\n          auther: this.$route.query.userId\r\n        }\r\n      });\r\n      let score = 0;\r\n      data.map(item => {\r\n        score += item.score;\r\n      });\r\n      this.score = score / data.length;\r\n      this.commitList = data;\r\n    },\r\n    async getUserInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.UPDATE_USER(this.$route.query.userId),\r\n        method: \"get\"\r\n      });\r\n      this.user = data;\r\n      this.image_url = data.image_url;\r\n      this.last_name = data.last_name\r\n    },\r\n    async onFileSuccess(res) {\r\n      await this.$http({\r\n        url: this.API.UPDATE_USER(this.$route.query.userId),\r\n        method: \"PATCH\",\r\n        data: {\r\n          image_url: res.url\r\n        }\r\n      });\r\n      this.getUserInfo();\r\n    },\r\n    async getFoodList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.FOOD_LIST,\r\n        params: {\r\n          auther: this.$route.query.userId\r\n        }\r\n      });\r\n      this.foodList = data.sort((a, b) => {\r\n        if (a.date > b.date) {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      });\r\n      this.foodList = this.foodList.filter(item => {\r\n        return +new Date() >= item.date;\r\n      });\r\n    },\r\n    async getBookInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.BOOK_LIST_Q(this.$route.query.userId)\r\n      });\r\n      this.bookList = data.map(item => {\r\n        if (item.food_detail) {\r\n          item.food_detail = JSON.parse(item.food_detail);\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    onClickMenu(active) {\r\n      this.active = active;\r\n    },\r\n    logout() {\r\n      this.$store.commit(\"users\", {});\r\n      this.$router.replace({ name: \"Login\" });\r\n    },\r\n    onEvaluate(item) {\r\n      this.isCommit = true;\r\n      this.modal = Object.assign(this.modal, {\r\n        image_url: item.image_url,\r\n        name: item.name,\r\n        date: item.date,\r\n        score: 0,\r\n        content: \"\",\r\n        id: item.id\r\n      });\r\n    },\r\n    async onCommitAdd() {\r\n      await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        method: \"post\",\r\n        data: {\r\n          description: this.modal.content,\r\n          score: this.modal.score,\r\n          auther: this.$route.query.userId,\r\n          food: this.modal.id\r\n        }\r\n      });\r\n      this.isCommit = false;\r\n      //刷新列表\r\n      this.getBookInfo();\r\n      this.$Message.success(\"Evaluation success!\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"./style.less\";\r\n</style>\r\n"]}]}