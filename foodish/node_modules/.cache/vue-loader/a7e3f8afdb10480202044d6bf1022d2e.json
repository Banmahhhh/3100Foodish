{"remainingRequest":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/li/Desktop/foodish/src/views/info/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/li/Desktop/foodish/src/views/info/index.vue","mtime":1550391038000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FoodItem from \"@/components/FoodItem\";\r\nimport CommitItem from \"@/components/CommitItem\";\r\nexport default {\r\n  components: { FoodItem, CommitItem },\r\n  data() {\r\n    return {\r\n      userid: \"\",\r\n      item: {},\r\n      forms: {},\r\n      rules: {},\r\n      flavorList: [],\r\n      dislikeList: [],\r\n      bookList: [],\r\n      commitList: [],\r\n      userName:\"\"\r\n    };\r\n  },\r\n  computed: {\r\n    isPerson() {\r\n      return this.item.author === this.$store.state.users.id;\r\n    },\r\n    isBooked() {\r\n      const result = this.bookList.find(item => {\r\n        return item.food === this.item.id;\r\n      });\r\n      return result ? true : false;\r\n    }\r\n  },\r\n  async created() {\r\n    this.flavorList = this.$utils.flavor;\r\n    this.dislikeList = this.$utils.dislike;\r\n    await this.getInfo();\r\n    this.getBookInfo();\r\n    this.getCommitList();\r\n  },\r\n  methods: {\r\n    async getCommitList() {\r\n      const { id } = this.$route.query;\r\n      const { data } = await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        params: {\r\n          food: id\r\n        }\r\n      });\r\n      this.commitList = data;\r\n    },\r\n    async getBookInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.BOOK_LIST_Q(this.$store.state.users.id)\r\n      });\r\n      this.bookList = data;\r\n    },\r\n    async onDelete({ id, content }) {\r\n      const currDate = +new Date();\r\n      if (this.item.date - currDate < 24 * 60 * 60 * 1000) {\r\n        this.$Modal.error({\r\n          title: \"Tips\",\r\n          content: \"Sorry , you cannot cancel it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.$http({\r\n        url: this.API.FOOD_UPDATE(id),\r\n        method: \"put\",\r\n        data: {\r\n          content,\r\n          is_cancel: true\r\n        }\r\n      });\r\n      this.$Message.success(\"You have cancel it successfull!\");\r\n      this.$router.replace({ name: \"Home\" });\r\n    },\r\n    //取消预订\r\n    async onDeleteReserve(id) {\r\n      const currDate = +new Date();\r\n      if (this.item.date - currDate < 24 * 60 * 60 * 1000) {\r\n        this.$Modal.error({\r\n          title: \"Tips\",\r\n          content: \"Sorry , you cannot cancel it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.$http({\r\n        url: this.API.BOOK_DEL(this.bookList[0].id),\r\n        method: \"delete\"\r\n      });\r\n      await this.getBookInfo();\r\n      this.getInfo();\r\n      this.$Modal.success({\r\n        title: \"Tips\",\r\n        content: \"You have cancel it successfull!\"\r\n      });\r\n    },\r\n    async onReserve(id) {\r\n      const currDate = +new Date();\r\n      if (this.item.date - currDate < 24 * 60 * 60 * 1000) {\r\n        this.$Modal.error({\r\n          title: \"Tips\",\r\n          content: \"Sorry , you cannot reserve it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.getInfo();\r\n      if (this.item.book_now === this.item.max_book) {\r\n        this.$Modal.success({\r\n          title: \"Tips\",\r\n          content: \"Sorry , You cannot reserve it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.$http({\r\n        url: this.API.BOOK,\r\n        method: \"post\",\r\n        data: { food: id, user: this.$store.state.users.id }\r\n      });\r\n      await this.getBookInfo();\r\n      this.getInfo();\r\n      this.$Modal.success({\r\n        title: \"Tips\",\r\n        content: \"You have reserved it successfull!\"\r\n      });\r\n    },\r\n    async getInfo() {\r\n      const { id } = this.$route.query;\r\n      const { data } = await this.$http({\r\n        url: this.API.FOOD_INFO(id)\r\n      });\r\n      let result = data || {};\r\n      result.style += \"\";\r\n      result.diet += \"\";\r\n      let flavor = result.style.split(\",\");\r\n      let dislike = result.diet.split(\",\");\r\n      flavor = flavor\r\n        .map(item => {\r\n          let val = +item;\r\n          let flavorItem = this.flavorList.find(m => {\r\n            return m.val === val;\r\n          });\r\n          return flavorItem ? flavorItem.text : \"\";\r\n        })\r\n        .join(\" \");\r\n\r\n      dislike = dislike\r\n        .map(item => {\r\n          let val = +item;\r\n          let dislikeItem = this.dislikeList.find(m => {\r\n            return m.val === val;\r\n          });\r\n          return dislikeItem ? dislikeItem.text : \"\";\r\n        })\r\n        .join(\" \");\r\n      this.item = {\r\n        ...result,\r\n        dislike,\r\n        flavor,\r\n        auther_name :this.$route.query.userName\r\n      };\r\n      console.log(this.item)\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/info","sourcesContent":["<template>\r\n  <div class=\"info\">\r\n    <div class=\"info-header\">\r\n      <div class=\"info-left\" @click=\"$router.back()\">\r\n        <img src=\"@/resource/fanhui.svg\" alt=\"\">\r\n      </div>\r\n      <span>Foodish</span>\r\n    </div>\r\n    <div class=\"info-main\">\r\n      <FoodItem :item=\"item\" :infoBtn=\"false\" />\r\n      <div class=\"item-main-row\">\r\n        <label>Flavor\r\n          <i></i>\r\n        </label>\r\n        <span class=\"text-ellipsis\">：{{item.flavor}}</span>\r\n      </div>\r\n      <div class=\"item-main-row\">\r\n        <label>Dislike\r\n          <i></i>\r\n        </label>\r\n        <span class=\"text-ellipsis\">：{{item.dislike}}</span>\r\n      </div>\r\n      <div class=\"item-footer\">\r\n        <Button @click=\"onDelete(item)\" v-if=\"isPerson\" size=\"large\" type=\"warning\">cancel it</Button>\r\n        <Button @click=\"onReserve(item.id)\" v-else-if=\"!isPerson&&!isBooked\" size=\"large\" type=\"warning\">reserve it</Button>\r\n        <Button @click=\"onDeleteReserve(item.id)\" v-else-if=\"!isPerson&&isBooked\" size=\"large\" type=\"warning\">cancel it</Button>\r\n      </div>\r\n      <!-- 评论 -->\r\n      <div class=\"commit\">\r\n        <CommitItem v-for=\"item in commitList\" :key=\"item.id\" :item=\"item\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FoodItem from \"@/components/FoodItem\";\r\nimport CommitItem from \"@/components/CommitItem\";\r\nexport default {\r\n  components: { FoodItem, CommitItem },\r\n  data() {\r\n    return {\r\n      userid: \"\",\r\n      item: {},\r\n      forms: {},\r\n      rules: {},\r\n      flavorList: [],\r\n      dislikeList: [],\r\n      bookList: [],\r\n      commitList: [],\r\n      userName:\"\"\r\n    };\r\n  },\r\n  computed: {\r\n    isPerson() {\r\n      return this.item.author === this.$store.state.users.id;\r\n    },\r\n    isBooked() {\r\n      const result = this.bookList.find(item => {\r\n        return item.food === this.item.id;\r\n      });\r\n      return result ? true : false;\r\n    }\r\n  },\r\n  async created() {\r\n    this.flavorList = this.$utils.flavor;\r\n    this.dislikeList = this.$utils.dislike;\r\n    await this.getInfo();\r\n    this.getBookInfo();\r\n    this.getCommitList();\r\n  },\r\n  methods: {\r\n    async getCommitList() {\r\n      const { id } = this.$route.query;\r\n      const { data } = await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        params: {\r\n          food: id\r\n        }\r\n      });\r\n      this.commitList = data;\r\n    },\r\n    async getBookInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.BOOK_LIST_Q(this.$store.state.users.id)\r\n      });\r\n      this.bookList = data;\r\n    },\r\n    async onDelete({ id, content }) {\r\n      const currDate = +new Date();\r\n      if (this.item.date - currDate < 24 * 60 * 60 * 1000) {\r\n        this.$Modal.error({\r\n          title: \"Tips\",\r\n          content: \"Sorry , you cannot cancel it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.$http({\r\n        url: this.API.FOOD_UPDATE(id),\r\n        method: \"put\",\r\n        data: {\r\n          content,\r\n          is_cancel: true\r\n        }\r\n      });\r\n      this.$Message.success(\"You have cancel it successfull!\");\r\n      this.$router.replace({ name: \"Home\" });\r\n    },\r\n    //取消预订\r\n    async onDeleteReserve(id) {\r\n      const currDate = +new Date();\r\n      if (this.item.date - currDate < 24 * 60 * 60 * 1000) {\r\n        this.$Modal.error({\r\n          title: \"Tips\",\r\n          content: \"Sorry , you cannot cancel it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.$http({\r\n        url: this.API.BOOK_DEL(this.bookList[0].id),\r\n        method: \"delete\"\r\n      });\r\n      await this.getBookInfo();\r\n      this.getInfo();\r\n      this.$Modal.success({\r\n        title: \"Tips\",\r\n        content: \"You have cancel it successfull!\"\r\n      });\r\n    },\r\n    async onReserve(id) {\r\n      const currDate = +new Date();\r\n      if (this.item.date - currDate < 24 * 60 * 60 * 1000) {\r\n        this.$Modal.error({\r\n          title: \"Tips\",\r\n          content: \"Sorry , you cannot reserve it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.getInfo();\r\n      if (this.item.book_now === this.item.max_book) {\r\n        this.$Modal.success({\r\n          title: \"Tips\",\r\n          content: \"Sorry , You cannot reserve it now!\"\r\n        });\r\n        return;\r\n      }\r\n      await this.$http({\r\n        url: this.API.BOOK,\r\n        method: \"post\",\r\n        data: { food: id, user: this.$store.state.users.id }\r\n      });\r\n      await this.getBookInfo();\r\n      this.getInfo();\r\n      this.$Modal.success({\r\n        title: \"Tips\",\r\n        content: \"You have reserved it successfull!\"\r\n      });\r\n    },\r\n    async getInfo() {\r\n      const { id } = this.$route.query;\r\n      const { data } = await this.$http({\r\n        url: this.API.FOOD_INFO(id)\r\n      });\r\n      let result = data || {};\r\n      result.style += \"\";\r\n      result.diet += \"\";\r\n      let flavor = result.style.split(\",\");\r\n      let dislike = result.diet.split(\",\");\r\n      flavor = flavor\r\n        .map(item => {\r\n          let val = +item;\r\n          let flavorItem = this.flavorList.find(m => {\r\n            return m.val === val;\r\n          });\r\n          return flavorItem ? flavorItem.text : \"\";\r\n        })\r\n        .join(\" \");\r\n\r\n      dislike = dislike\r\n        .map(item => {\r\n          let val = +item;\r\n          let dislikeItem = this.dislikeList.find(m => {\r\n            return m.val === val;\r\n          });\r\n          return dislikeItem ? dislikeItem.text : \"\";\r\n        })\r\n        .join(\" \");\r\n      this.item = {\r\n        ...result,\r\n        dislike,\r\n        flavor,\r\n        auther_name :this.$route.query.userName\r\n      };\r\n      console.log(this.item)\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"./style.less\";\r\n</style>\r\n"]}]}