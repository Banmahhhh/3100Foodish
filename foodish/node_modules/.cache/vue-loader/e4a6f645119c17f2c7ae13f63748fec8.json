{"remainingRequest":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/li/Desktop/foodish/src/views/person/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/li/Desktop/foodish/src/views/person/index.vue","mtime":1553345340000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/li/Desktop/foodish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FoodItemSmall from \"@/components/FoodItemSmall\";\r\nexport default {\r\n  components: { FoodItemSmall },\r\n  data() {\r\n    return {\r\n      last_name:\"\",\r\n      active: 0,\r\n      commitId: \"\",\r\n      isCommit: false,\r\n      image_url: \"\",\r\n      score: 0,\r\n      modal: {\r\n        id: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        image_url: \"\",\r\n        score: 0,\r\n        content: \"\"\r\n      },\r\n      forms: {},\r\n      rules: {},\r\n      flavorList: [],\r\n      dislikeList: [],\r\n      bookList: [],\r\n      commitList: [],\r\n      foodList: [] //我做的菜列表\r\n    };\r\n  },\r\n  computed: {\r\n    fans_num(){\r\n      return this.$store.state.users.fans_num;\r\n    },\r\n    uname(){\r\n      return this.$store.state.users.name;\r\n    },\r\n    username() {\r\n      return this.$store.state.users.username;\r\n    },\r\n    bookList2(){\r\n      return this.bookList.filter(item=>item.date<+new Date())\r\n    },\r\n    commingList() {\r\n      const d = +new Date();\r\n      const dayTime = 24 * 60 * 60 * 1000;\r\n      const list = [...this.foodList,...this.bookList]\r\n      return this.bookList\r\n        .map(item => {\r\n          const food_detail = item.food_detail;\r\n          if (food_detail) {\r\n            if (d - food_detail.date <= dayTime && !food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 0,\r\n                orderText: \"You need to take it\"\r\n              };\r\n            }\r\n\r\n            if (food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 1,\r\n                orderText: \"It has been canceled\"\r\n              };\r\n            }\r\n\r\n            //\r\n          }\r\n        })\r\n        .concat(this.foodList)\r\n        .map((item)=>{\r\n          const text=\"you need to cook it\"\r\n          if (!item.is_cancel) {\r\n              return {\r\n                ...item,\r\n                \r\n                orderStatus: 0,\r\n                orderText:this.$store.state.users.id==item.author?text: \"You need to take it\"\r\n              };\r\n            }\r\n\r\n            if (item.is_cancel) {\r\n              return {\r\n                ...item,\r\n                \r\n                orderStatus: 1,\r\n                orderText: \"It has been canceled\"\r\n              };\r\n            }\r\n        })\r\n        .filter(item => {\r\n          if(+new Date()<=item.date) {\r\n            return true\r\n          }\r\n          return false;\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.flavorList = this.$utils.flavor;\r\n    this.dislikeList = this.$utils.dislike;\r\n    this.getBookInfo();\r\n    this.getFoodList();\r\n    this.getUserInfo();\r\n    this.getCommitList();\r\n  },\r\n  methods: {\r\n    async onDescChange(){\r\n      console.log(this.$store.state.users)\r\n      await this.$http({\r\n        url:this.API.UPDATE_USER( this.$store.state.users.id),\r\n        method: \"PATCH\",\r\n        data:{\r\n          last_name:this.last_name\r\n        }\r\n      })\r\n      this.$Message.success(\"edit successfully\");\r\n      this.getUserInfo()\r\n    },\r\n    currStyle(img) {\r\n      return `background-image:url(${img});width:150px;height:100px;`;\r\n    },\r\n    getCurrStyle() {\r\n      return `background-image:url(${\r\n        this.image_url\r\n      });background-size: cover;width:100%;height:200px;background-color:#eee;background-size: cover;`;\r\n    },\r\n    async getCommitList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        params: {\r\n          auther: this.$store.state.users.id\r\n        }\r\n      });\r\n      let score = 0;\r\n      data.map(item => {\r\n        score += item.score;\r\n      });\r\n      this.score = score / data.length;\r\n      this.commitList = data;\r\n    },\r\n    async getUserInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.UPDATE_USER(this.$store.state.users.id),\r\n        method: \"get\"\r\n      });\r\n      this.$store.commit(\"users\", Object.assign(this.$store.state.users, data));\r\n      this.image_url = data.image_url;\r\n      this.last_name = data.last_name;\r\n    },\r\n    async onFileSuccess(res) {\r\n      await this.$http({\r\n        url: this.API.UPDATE_USER(this.$store.state.users.id),\r\n        method: \"PATCH\",\r\n        data: {\r\n          image_url: res.url\r\n        }\r\n      });\r\n      this.getUserInfo();\r\n    },\r\n    async getFoodList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.FOOD_LIST,\r\n        params: {\r\n          author: this.$store.state.users.id\r\n        }\r\n      });\r\n      this.foodList = data.sort((a, b) => {\r\n        if (a.date > b.date) {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      });\r\n      \r\n    },\r\n    async getBookInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.BOOK_LIST_Q(this.$store.state.users.id)\r\n      });\r\n      this.bookList = data.map(item => {\r\n        if (item.food_detail) {\r\n          item.food_detail = JSON.parse(item.food_detail);\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    onClickMenu(active) {\r\n      this.active = active;\r\n    },\r\n    logout() {\r\n      this.$store.commit(\"users\", {});\r\n      this.$router.replace({ name: \"Login\" });\r\n    },\r\n    onEvaluate(item) {\r\n      this.isCommit = true;\r\n      this.modal = Object.assign(this.modal, {\r\n        image_url: item.image_url,\r\n        name: item.name,\r\n        date: item.date,\r\n        score: 0,\r\n        content: \"\",\r\n        id: item.id\r\n      });\r\n    },\r\n    async onCommitAdd() {\r\n      await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        method: \"post\",\r\n        data: {\r\n          description: this.modal.content,\r\n          score: this.modal.score,\r\n          auther: this.$store.state.users.id,\r\n          food: this.modal.id\r\n        }\r\n      });\r\n      this.isCommit = false;\r\n      //刷新列表\r\n      this.getBookInfo();\r\n      this.$Message.success(\"Evaluation success!\");\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"index.vue","sourceRoot":"src/views/person","sourcesContent":["<template>\r\n  <div class=\"person\">\r\n    <div class=\"person-header\">\r\n      <div class=\"person-left\" @click=\"$router.push({ name: 'Home' })\">\r\n        <img src=\"@/resource/fanhui.svg\" alt=\"\" />\r\n      </div>\r\n      <span>Foodish</span>\r\n    </div>\r\n    <div class=\"person-main-form\">\r\n      <div class=\"person-main-left\">\r\n        <ul>\r\n          <li :class=\"{ active: active === 0 }\" @click=\"onClickMenu(0)\">\r\n            Accout Information\r\n          </li>\r\n          <li :class=\"{ active: active === 1 }\" @click=\"onClickMenu(1)\">\r\n            I have bought\r\n          </li>\r\n          <li :class=\"{ active: active === 2 }\" @click=\"onClickMenu(2)\">\r\n            I have cooked\r\n          </li>\r\n          <li :class=\"{ active: active === 3 }\" @click=\"onClickMenu(3)\">\r\n            Comming order\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div v-if=\"active === 0\" class=\"person-main-right\">\r\n        <!-- user -->\r\n        <div class=\"person-main-row\">\r\n          <div class=\"person-logo\">\r\n            <div :style=\"getCurrStyle()\" class=\"person-image\"></div>\r\n            <Upload\r\n              :on-success=\"onFileSuccess\"\r\n              name=\"img\"\r\n              :show-upload-list=\"false\"\r\n              multiple\r\n              type=\"drag\"\r\n              :action=\"API.IMAGE_UPLOAD\"\r\n            >\r\n              <Button size=\"small\">change</Button>\r\n            </Upload>\r\n            \r\n          </div>\r\n          <div class=\"person-info\">\r\n            <Rate :value=\"score\" disabled />\r\n            <p style=\"font-size:20px\" >{{uname}}</p>\r\n            <p style=\"font-size:20px\">{{username}}</p>\r\n            <p style=\"font-size:20px\">fans:{{fans_num}}</p>\r\n            <br><br>\r\n            <Input v-model=\"last_name\" type=\"textarea\" :autosize=\"{minRows: 3,maxRows:10}\" placeholder=\"Enter desc...\">\r\n\r\n            </Input>\r\n            <br><br>\r\n            <Button @click=\"onDescChange\" size=\"small\">change</Button>\r\n          </div>\r\n        </div>\r\n        <!-- loginout -->\r\n        <div class=\"person-main-row-btn\">\r\n          <Button @click=\"logout\" type=\"warning\" class=\"logout\" size=\"large\"\r\n            >logout</Button\r\n          >\r\n        </div>\r\n      </div>\r\n      <div v-if=\"active === 1\" class=\"person-main-right\" style=\"padding-top:0\">\r\n        <div class=\"not-data\" v-if=\"bookList2.length === 0\">\r\n          <img src=\"../../resource/745077899322453353.jpg\" />\r\n          <p>It is empty. Add something to it now!</p>\r\n        </div>\r\n        <FoodItemSmall\r\n          @evaluate=\"onEvaluate\"\r\n          commit\r\n          :align=\"`${index % 2 !== 0 ? 'right' : 'left'}`\"\r\n          v-for=\"(item, index) in bookList2\"\r\n          :key=\"item.id\"\r\n          :item=\"item.food_detail\"\r\n          :isCommit=\"item.is_comment\"\r\n          \r\n        />\r\n      </div>\r\n      <div v-if=\"active === 2\" class=\"person-main-right\" style=\"padding-top:0\">\r\n        <div class=\"not-data\" v-if=\"foodList.length === 0\">\r\n          <img src=\"../../resource/745077899322453353.jpg\" />\r\n          <p>It is empty. Add something to it now!</p>\r\n        </div>\r\n        <FoodItemSmall\r\n          :align=\"`${index % 2 !== 0 ? 'right' : 'left'}`\"\r\n          v-for=\"(item, index) in foodList\"\r\n          :key=\"item.id\"\r\n          :item=\"item\"\r\n        />\r\n      </div>\r\n      <div v-if=\"active === 3\" class=\"person-main-right\" style=\"padding-top:0\">\r\n        <div class=\"not-data\" v-if=\"commingList.length === 0\">\r\n          <img src=\"../../resource/745077899322453353.jpg\" />\r\n          <p>It is empty. Add something to it now!</p>\r\n        </div>\r\n        <FoodItemSmall\r\n          comming\r\n          :align=\"`${index % 2 !== 0 ? 'right' : 'left'}`\"\r\n          v-for=\"(item, index) in commingList\"\r\n          :key=\"item.id\"\r\n          :item=\"item\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <!-- 评论 -->\r\n    <Modal\r\n      :value=\"isCommit\"\r\n      @on-cancel=\"isCommit = false\"\r\n      title=\"evaluate\"\r\n      :styles=\"{ width: '500px' }\"\r\n    >\r\n      <div class=\"modal-wrap\">\r\n        <div class=\"modal-inner\">\r\n          <div class=\"image\" :style=\"currStyle(modal.image_url)\"></div>\r\n          <div class=\"right\">\r\n            <p>{{ modal.name }}</p>\r\n            <p>{{ modal.date | dateFormat(\"yyyy-MM-dd hh:mm\") }}</p>\r\n          </div>\r\n        </div>\r\n        <Rate v-model=\"modal.score\" />\r\n        <Input\r\n          type=\"textarea\"\r\n          v-model=\"modal.content\"\r\n          :rows=\"4\"\r\n          placeholder=\"commit\"\r\n        ></Input>\r\n      </div>\r\n      <div slot=\"footer\" class=\"modal-footer\">\r\n        <Button @click=\"isCommit = false\">cancel</Button>\r\n        <Button @click=\"onCommitAdd\" type=\"warning\">ok</Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FoodItemSmall from \"@/components/FoodItemSmall\";\r\nexport default {\r\n  components: { FoodItemSmall },\r\n  data() {\r\n    return {\r\n      last_name:\"\",\r\n      active: 0,\r\n      commitId: \"\",\r\n      isCommit: false,\r\n      image_url: \"\",\r\n      score: 0,\r\n      modal: {\r\n        id: \"\",\r\n        name: \"\",\r\n        date: \"\",\r\n        image_url: \"\",\r\n        score: 0,\r\n        content: \"\"\r\n      },\r\n      forms: {},\r\n      rules: {},\r\n      flavorList: [],\r\n      dislikeList: [],\r\n      bookList: [],\r\n      commitList: [],\r\n      foodList: [] //我做的菜列表\r\n    };\r\n  },\r\n  computed: {\r\n    fans_num(){\r\n      return this.$store.state.users.fans_num;\r\n    },\r\n    uname(){\r\n      return this.$store.state.users.name;\r\n    },\r\n    username() {\r\n      return this.$store.state.users.username;\r\n    },\r\n    bookList2(){\r\n      return this.bookList.filter(item=>item.date<+new Date())\r\n    },\r\n    commingList() {\r\n      const d = +new Date();\r\n      const dayTime = 24 * 60 * 60 * 1000;\r\n      const list = [...this.foodList,...this.bookList]\r\n      return this.bookList\r\n        .map(item => {\r\n          const food_detail = item.food_detail;\r\n          if (food_detail) {\r\n            if (d - food_detail.date <= dayTime && !food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 0,\r\n                orderText: \"You need to take it\"\r\n              };\r\n            }\r\n\r\n            if (food_detail.is_cancel) {\r\n              return {\r\n                ...item,\r\n                ...food_detail,\r\n                orderStatus: 1,\r\n                orderText: \"It has been canceled\"\r\n              };\r\n            }\r\n\r\n            //\r\n          }\r\n        })\r\n        .concat(this.foodList)\r\n        .map((item)=>{\r\n          const text=\"you need to cook it\"\r\n          if (!item.is_cancel) {\r\n              return {\r\n                ...item,\r\n                \r\n                orderStatus: 0,\r\n                orderText:this.$store.state.users.id==item.author?text: \"You need to take it\"\r\n              };\r\n            }\r\n\r\n            if (item.is_cancel) {\r\n              return {\r\n                ...item,\r\n                \r\n                orderStatus: 1,\r\n                orderText: \"It has been canceled\"\r\n              };\r\n            }\r\n        })\r\n        .filter(item => {\r\n          if(+new Date()<=item.date) {\r\n            return true\r\n          }\r\n          return false;\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.flavorList = this.$utils.flavor;\r\n    this.dislikeList = this.$utils.dislike;\r\n    this.getBookInfo();\r\n    this.getFoodList();\r\n    this.getUserInfo();\r\n    this.getCommitList();\r\n  },\r\n  methods: {\r\n    async onDescChange(){\r\n      console.log(this.$store.state.users)\r\n      await this.$http({\r\n        url:this.API.UPDATE_USER( this.$store.state.users.id),\r\n        method: \"PATCH\",\r\n        data:{\r\n          last_name:this.last_name\r\n        }\r\n      })\r\n      this.$Message.success(\"edit successfully\");\r\n      this.getUserInfo()\r\n    },\r\n    currStyle(img) {\r\n      return `background-image:url(${img});width:150px;height:100px;`;\r\n    },\r\n    getCurrStyle() {\r\n      return `background-image:url(${\r\n        this.image_url\r\n      });background-size: cover;width:100%;height:200px;background-color:#eee;background-size: cover;`;\r\n    },\r\n    async getCommitList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        params: {\r\n          auther: this.$store.state.users.id\r\n        }\r\n      });\r\n      let score = 0;\r\n      data.map(item => {\r\n        score += item.score;\r\n      });\r\n      this.score = score / data.length;\r\n      this.commitList = data;\r\n    },\r\n    async getUserInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.UPDATE_USER(this.$store.state.users.id),\r\n        method: \"get\"\r\n      });\r\n      this.$store.commit(\"users\", Object.assign(this.$store.state.users, data));\r\n      this.image_url = data.image_url;\r\n      this.last_name = data.last_name;\r\n    },\r\n    async onFileSuccess(res) {\r\n      await this.$http({\r\n        url: this.API.UPDATE_USER(this.$store.state.users.id),\r\n        method: \"PATCH\",\r\n        data: {\r\n          image_url: res.url\r\n        }\r\n      });\r\n      this.getUserInfo();\r\n    },\r\n    async getFoodList() {\r\n      const { data } = await this.$http({\r\n        url: this.API.FOOD_LIST,\r\n        params: {\r\n          author: this.$store.state.users.id\r\n        }\r\n      });\r\n      this.foodList = data.sort((a, b) => {\r\n        if (a.date > b.date) {\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      });\r\n      \r\n    },\r\n    async getBookInfo() {\r\n      const { data } = await this.$http({\r\n        url: this.API.BOOK_LIST_Q(this.$store.state.users.id)\r\n      });\r\n      this.bookList = data.map(item => {\r\n        if (item.food_detail) {\r\n          item.food_detail = JSON.parse(item.food_detail);\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    onClickMenu(active) {\r\n      this.active = active;\r\n    },\r\n    logout() {\r\n      this.$store.commit(\"users\", {});\r\n      this.$router.replace({ name: \"Login\" });\r\n    },\r\n    onEvaluate(item) {\r\n      this.isCommit = true;\r\n      this.modal = Object.assign(this.modal, {\r\n        image_url: item.image_url,\r\n        name: item.name,\r\n        date: item.date,\r\n        score: 0,\r\n        content: \"\",\r\n        id: item.id\r\n      });\r\n    },\r\n    async onCommitAdd() {\r\n      await this.$http({\r\n        url: this.API.COMMIT_ADD,\r\n        method: \"post\",\r\n        data: {\r\n          description: this.modal.content,\r\n          score: this.modal.score,\r\n          auther: this.$store.state.users.id,\r\n          food: this.modal.id\r\n        }\r\n      });\r\n      this.isCommit = false;\r\n      //刷新列表\r\n      this.getBookInfo();\r\n      this.$Message.success(\"Evaluation success!\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"./style.less\";\r\n</style>\r\n"]}]}